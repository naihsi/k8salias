
# rotate
function k_rotate {
  if test ! -z "$2"; then
    opts=($(kubectl get ${1} --all-namespaces | grep ${2} | grep -v NAME | awk '{print $2"__@"$1 }'))
  else
    opts=($(kubectl get ${1} --all-namespaces | grep -v NAME | awk '{print $2"__@"$1 }'))
  fi

  select opt in "${opts[@]}"; do
    com=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    NS=$(echo $opt | tr "__@" " " | awk '{ print $2 }')
    kubectl patch ${1} ${com} -n ${NS} -p  \
      "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"pn-rotate\":\"`date +'%Y%m%d%H%M%S'`\"}}}}}"
    break
  done
}

function krodeployment {
  k_rotate deployment "$@"
}

function krodaemonset {
  k_rotate daemonset "$@"
}

function krostatefulset {
  k_rotate statefulset "$@"
}

# label
function kalabel {
  if test ! -z "$2"; then
    opts=($(kubectl get nodes | grep ${2} | grep -v NAME | awk '{print $1 }'))
  else
    opts=($(kubectl get nodes | grep -v NAME | awk '{print $1 }'))
  fi

  select opt in "${opts[@]}"; do
    com=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    echo "node ${com}"
    kubectl label node ${com} ${1}
    break
  done
}

# operator
function k_select {
  if test ! -z "$3"; then
    opts=($(kubectl get ${2} --all-namespaces | grep ${3} | grep -v NAME | awk '{print $2"__@"$1 }'))
  else
    opts=($(kubectl get ${2} --all-namespaces | grep -v NAME | awk '{print $2"__@"$1 }'))
  fi

  select opt in "${opts[@]}"; do
    com=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    NS=$(echo $opt | tr "__@" " " | awk '{ print $2 }')
    echo "${1} ${com}@${NS}"
    kubectl ${1} ${2} ${com} -n ${NS}
    break
  done

}

# describe
function kde {
  k_select describe $1 $2
}

function kdepod {
  kde pod $1
}

function kdeservice {
  kde service $1
}

function kdedaemonset {
  kde daemonset $1
}

function kdestatefulset {
  kde statefulset $1
}

function kdepv {
  kde pv $1
}

function kdepvc {
  kde pvc $1
}

function kdenode {
  if test ! -z "$1"; then
    opts=($(kubectl get node | grep ${1} |  grep -v NAME | awk '{print $1 }'))
  else
    opts=($(kubectl get node | grep -v NAME | awk '{print $1 }'))
  fi

  select opt in "${opts[@]}"; do
    com=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    echo "node ${com}"
    kubectl describe node ${com} 
    break
  done

}

# delete
function kd {
  k_select delete $1 $2
}

function kdpod {
  kd pod $1
}

# edit
function ke {
  k_select edit $1 $2
}

function kepod {
  ke pod $1
}

function keservice {
  ke service $1
}

function kedeployment {
  ke deployment $1
}

function kedaemonset {
  ke daemonset $1
}

function kestatefulset {
  ke statefulset $1
}

function kepv {
  ke pv $1
}

function kepvc {
  ke pvc $1
}


# pod only
# exec
function kprun {
  if test ! -z "$1"; then
    opts=($(kubectl get pods --all-namespaces | grep $1 | grep -v NAME | awk '{print $2"__@"$1 }'))
  else
    opts=($(kubectl get pods --all-namespaces | grep -v NAME | awk '{print $2"__@"$1 }'))
  fi

  select opt in "${opts[@]}"; do
    pod=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    NS=$(echo $opt | tr "__@" " " | awk '{ print $2 }')
    echo "entering ${pod}@${NS}"
    kubectl exec -it ${pod} -n ${NS} sh
    break
  done
}

# log
function kplog {
  if test ! -z "$1"; then
    opts=($(kubectl get pods --all-namespaces | grep ${1} | grep -v NAME | awk '{print $2"__@"$1 }'))
  else
    opts=($(kubectl get pods --all-namespaces | grep -v NAME | awk '{print $2"__@"$1 }'))
  fi

  select opt in "${opts[@]}"; do
    com=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    NS=$(echo $opt | tr "__@" " " | awk '{ print $2 }')
    echo "pod ${com}@${NS}"
    kubectl logs ${com} -n ${NS}
    break
  done
}

function kptail {
  if test ! -z "$1"; then
    opts=($(kubectl get pods --all-namespaces | grep ${1} | grep -v NAME | awk '{print $2"__@"$1 }'))
  else
    opts=($(kubectl get pods --all-namespaces | grep -v NAME | awk '{print $2"__@"$1 }'))
  fi

  select opt in "${opts[@]}"; do
    com=$(echo $opt | tr "__@" " " | awk '{ print $1 }')
    NS=$(echo $opt | tr "__@" " " | awk '{ print $2 }')
    echo "pod ${com}@${NS}"
    kubectl logs ${com} -n ${NS} -f
    break
  done
}


# get in all namespaces and widely
function ko {
  if test ! -z "$1"; then

  if test -z "$2"; then
    kubectl get $1 --all-namespaces -owide
  else
    kubectl get $1 --all-namespaces -owide | grep $2
  fi
fi
}

function koservices {
  ko services "$@"
}

function kopods {
  ko pods "$@"
}

function koingresses {
  ko ingresses "$@"
}

function kodeployments {
  ko deployments "$@"
}

function kodaemonsets {
  ko daemonsets "$@"
}

function kostatefulsets {
  ko statefulsets "$@"
}

function kosmonitors {
  ko servicemonitors "$@"
}

function koconfigmaps {
  ko configmaps "$@"
}

function kosecrets {
  ko secrets "$@"
}

function kopv {
  ko pv "$@"
}

function kopvc {
  ko pvc "$@"
}


